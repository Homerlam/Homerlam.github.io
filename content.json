{"meta":{"title":"Homer的博客","subtitle":"","description":"","author":"Homerlam","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"JAVA与C++的区别（浅谈）","slug":"JAVA与C-的区别（浅谈）","date":"2020-04-11T15:47:46.000Z","updated":"2020-04-11T16:33:20.233Z","comments":true,"path":"2020/04/11/JAVA与C-的区别（浅谈）/","link":"","permalink":"http://yoursite.com/2020/04/11/JAVA%E4%B8%8EC-%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%88%E6%B5%85%E8%B0%88%EF%BC%89/","excerpt":"","text":"浅谈JAVA与C++的区别 语言类型 JAVA是解释性语言，源码会先经过一次编译，成为中间码（JAVA中的中间码便是字节码 .class 文件），中间码再被解释器解释成机器码。（JAVA的解释器在JVM中内置） C++是编译型语言，源码一次编译，直接在编译的过程中形成了机器码。因此C++执行速度比JAVA快。 C++一次编写到处编译，而Java一次编译到处运行。 关于JVM要学的较多，会另开一章解释 垃圾回收方面 C++需要程序员自己回收，对内存进行良好的管理（利用析构函数）。 JAVA有自己的垃圾回收机制（GC算法）。 关于JAVA的垃圾回收机制会在JVM一章中学习 关于继承 JAVA的类是单继承的，但接口是多继承的，类对接口的实现也是多实现的。 C++支持多继承，允许多父类派生一个子类。 数据类型 JAVA是完全面向对象的语言，所有方法和数据都必须是类的一部分。类将数据和方法结合起来，使其封装起来。 C++有面向过程的东西，比如全局变量和全局函数，由此调用这些函数和变量会增加程序的负担。 指针 JAVA无指针的概念，引入了真正的数组。（JVM内部仍旧使用了指针，外人不得使用，保护程序安全） C++利用指针实现了“伪数组”，利用指针操作内存时常出现错误。 参考文献 【知乎】 噜啦啦噜啦啦 【CSDN】 小菜鸡的蜕变之路 《Java与C++的区别》 【简书】 南城无霜 《JAVA与C，C++的区别》","categories":[],"tags":[{"name":"JAVA; C++","slug":"JAVA-C","permalink":"http://yoursite.com/tags/JAVA-C/"}]},{"title":"使用github + PicGo搭建图床","slug":"使用github搭建图床","date":"2020-04-06T07:30:37.000Z","updated":"2020-04-06T09:26:00.091Z","comments":true,"path":"2020/04/06/使用github搭建图床/","link":"","permalink":"http://yoursite.com/2020/04/06/%E4%BD%BF%E7%94%A8github%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/","excerpt":"Markdown的语法虽然简单易懂，但是当需要插入图片的时候，如果仅仅使用本地链接则只有自己能够看到图片，所以一旦文档中有了图片，将Markdown语法迁移到别的电脑上展示的成本将大大提升。为了解决图片的链接问题，我找到了使用github+PicGo搭建图床的简便方法。","text":"Markdown的语法虽然简单易懂，但是当需要插入图片的时候，如果仅仅使用本地链接则只有自己能够看到图片，所以一旦文档中有了图片，将Markdown语法迁移到别的电脑上展示的成本将大大提升。为了解决图片的链接问题，我找到了使用github+PicGo搭建图床的简便方法。 创建自己的github图床 创建新的Repository 生成一个Token用于操作github repository 依次找到setting、Developer settings、Personal access tokens，点击Generate new token 按照图中配置生成Token 注意：生成的Token要马上记录下来保存好，因为下次再来就看不到Token了 下载配置PicGo 在github上搜索下载PicGo 点击clone or download下载.zip文件 下载成功后配置PicGo 仓库名必须为 用户名/仓库名 分支名默认为 master 即可 Token 即为刚刚生成的 存储路径img/的意思是会在repository下创建一个img文件夹储存图片 自定义域名需按照https://raw.githubusercontent.com/用户名/仓库名/分支名 的格式设置 总结 使用Markdown语法插入图片虽然略显麻烦，但是在配置好软件之后提高了许多效率。 缺点：使用github作为图床对网络的要求较高，网络不好时容易上传失败 优点：方便快捷，免费 参考文献https://www.cnblogs.com/ly-2019/p/11828790.html","categories":[],"tags":[{"name":"github","slug":"github","permalink":"http://yoursite.com/tags/github/"},{"name":"图床","slug":"图床","permalink":"http://yoursite.com/tags/%E5%9B%BE%E5%BA%8A/"}]},{"title":"从0开始，从搭建博客开始","slug":"从0开始，从搭建博客开始","date":"2020-04-04T22:01:25.000Z","updated":"2020-04-06T09:22:24.915Z","comments":true,"path":"2020/04/05/从0开始，从搭建博客开始/","link":"","permalink":"http://yoursite.com/2020/04/05/%E4%BB%8E0%E5%BC%80%E5%A7%8B%EF%BC%8C%E4%BB%8E%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%A7%8B/","excerpt":"一、 为什么要搭建博客 记录自己每一阶段的学习成果 与大家一起分享、交流计算机学习的心得体会","text":"一、 为什么要搭建博客 记录自己每一阶段的学习成果 与大家一起分享、交流计算机学习的心得体会 二、 如何搭建一个属于自己的hexo博客1. 如何部署环境 下载Node.js 安装完成后进入终端(终端进入方法:win+r,输入cmd,确认),分别输入node -v和npm -v若出现相应的版本号则为安装成功 利用npm安装cnpm: 在终端输入npm install -g cnpm --registry=https://registry.npm.taobao.org 安装完成后输入cnpm可检查安装是否成功 利用cnpm安装hexo: 输入cnpm install -g hexo-cli 安装完成后输入hexo -v出现版本号则证明安装成功 以上步骤成功则环境部署完成 2. 如何初始化博客 依然在终端进行,在合适的目录下分别输入mkdir blog和cd blog(‘blog’是文件名,可自由变更)创建一个文件夹,此后所有操作都在此文件夹下进行 初始化: 输入hexo init 启动博客: 输入hexo s在本地的4000端口就会生成我们的博客,在浏览器输入localhost:4000即可查看到我们的博客 创建一篇新博客: 输入hexo n &quot;我的第一篇博客&quot;即可生成博客,这篇博客所在目录是/blog/source/_posts/ 写博客:基于Markdown语言,利用Sublime等文本编辑器进行文本输入,解释会另开一篇博客记录Markdown的使用心得 将写好的博客生成: 先输入hexo clean清理一下,再输入hexo g生成文章,再输入hexo s重新启动一下博客,刷新页面即可发现新写的博客已经上传 3. 如何把个人博客部署到远端(将博客部署到github上) 登陆github账号,新建一个repository,仓库名字一定是昵称.github.io例如Homerlam.github.io 在/blog目录下安装git的部署插件,输入cnpm install --save hexo-deployer-git 在/blog目录下有个 _congfig.yml 文件,配置内部文件123456# Deployment## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.htmldeploy: type: git repo: https:&#x2F;&#x2F;github.com&#x2F;Homerlam&#x2F;Homerlam.github.io.git &#x2F;&#x2F;此处地址为自己刚刚新建的仓库的地址 branch: master 将博客部署到远端: 输入hexo d 在部署的过程中按弹出提示,输入自己的github账号和密码 以上,将github部署到远端就完成,浏览器中输入昵称.github.io即可访问个人博客,例如我自己的博客地址就是homerlam.github.io/ 4. 如何给个人博客更换主题(利用github上的资源) 先在github上找到喜欢的主题,并复制地址 将主题下载到本地: 在终端 /blog 目录下输入 git clone 上一步的地址 themes/主题的名字以自身为例子,输入git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 修改 _config.yml 文件的配置:找到 theme 配置,将其修改为新建主题的名字,以自身为例1234# Extensions## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;theme: yilia &#x2F;&#x2F;此项为要修改的内容 将新主题部署上:更新的三步骤 hexo clean hexo g hexo s hexo 5. 参考文献CodeSheep","categories":[],"tags":[{"name":"hexo博客","slug":"hexo博客","permalink":"http://yoursite.com/tags/hexo%E5%8D%9A%E5%AE%A2/"}]}],"categories":[],"tags":[{"name":"JAVA; C++","slug":"JAVA-C","permalink":"http://yoursite.com/tags/JAVA-C/"},{"name":"github","slug":"github","permalink":"http://yoursite.com/tags/github/"},{"name":"图床","slug":"图床","permalink":"http://yoursite.com/tags/%E5%9B%BE%E5%BA%8A/"},{"name":"hexo博客","slug":"hexo博客","permalink":"http://yoursite.com/tags/hexo%E5%8D%9A%E5%AE%A2/"}]}